


Level 1

Задание 1
---------------

Дано натуральное число N. Выведите слово YES, если число N 
является точной степенью двойки, или слово NO в противном случае.
Операцией возведения в степень пользоваться нельзя!
Ввод 8: Вывод: YES
Ввод 3: Вывод: NO


function findPowerOfTwo(N) {
  if (N === 1) {
    console.log("YES");
    return true;
  } else if (N % 2 === 0 && N > 1) {
    return findPowerOfTwo(N / 2);
  } else {
    console.log("NO");
    return false;
  }
}




Задание 2
-----------------


Дано натуральное число N. Вычислите сумму его цифр.
При решении этой задачи нельзя использовать строки, 
списки, массивы (ну и циклы, разумеется).
Ввод: 179
Вывод: 17


function sumDigits(n) {
  if (n < 10) {
    return n;
  } else {
    let sum = sumDigits(Math.floor(n / 10));
    return sum + n % 10;
  }
}

console.log(sumDigits(179));



level 2

Задание 1
------------------


Напишите рекурсивный метод, который выводит 
на экран числа Фибоначчи до N-ого элемента.


function fibonacci(n, a = 0, b = 1) {
  console.log(a);
  if (n === 0) {
    return;
  }
  fibonacci(n - 1, b, a + b);
}

fibonacci(10);



Задание 2
------------------

Напишите рекурсивный метод, который проверяет, является ли строка палиндромом.


// Не получилось написать так, чтобы даже строку с пробелами или с буквами
разных регистров считала как палиндром, типа "А роза упала на лапу Азора" 
я пыталась с trim() и lowerCase(), но она все равно работает раз через раз.
Еще потом попробую, пока не хватает знаний, как это реализовать.


const inputStr = prompt("Введите строку:");

function isPalindrome(str) {
  if (str.length === 0 || str.length === 1) {
    return true;
  } else if (str[0] === str[str.length - 1]) {
    return isPalindrome(str.slice(1, -1));
  } else {
    return false;
  }
}

if (isPalindrome(inputStr)) {
  alert(`Строка "${inputStr}" является палиндромом!`);
} else {
  alert(`Строка "${inputStr}" не является палиндромом!`);
}

